<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="EnsureWixToolsetInstalled" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>3.10</ProductVersion>
    <ProjectGuid>9ccd5cce-7b29-413a-bd5e-ae0c90aacea0</ProjectGuid>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputName>Setup_Project</OutputName>
    <OutputType>Package</OutputType>
    <BasePath>..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows\</BasePath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
    <DefineConstants>Debug</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Components.wxs" />
    <Compile Include="ComponentsGenerated.wxs" />
    <Compile Include="Directories.wxs" />
    <Compile Include="Product.wxs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Setup Project.wax" />
  </ItemGroup>
  <ItemGroup>
    <WixExtension Include="WixUtilExtension">
      <HintPath>$(WixExtDir)\WixUtilExtension.dll</HintPath>
      <Name>WixUtilExtension</Name>
    </WixExtension>
    <WixExtension Include="WixUIExtension">
      <HintPath>$(WixExtDir)\WixUIExtension.dll</HintPath>
      <Name>WixUIExtension</Name>
    </WixExtension>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Base.wxl" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Assets" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Volunteer Management UI\Volunteer Management UI.csproj">
      <Name>Volunteer Management UI</Name>
      <Project>{0185f661-0c10-47e6-afc2-38ee44a1c446}</Project>
      <Private>True</Private>
      <DoNotHarvest>True</DoNotHarvest>
      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>
      <RefTargetDir>INSTALLFOLDER</RefTargetDir>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <LightAdditionalOptions>-nologo -sval</LightAdditionalOptions>
  </PropertyGroup>
  <Import Project="$(WixTargetsPath)" Condition=" '$(WixTargetsPath)' != '' " />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets" Condition=" '$(WixTargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets') " />
  <!--<Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixTargetsImported)' != 'true' ">
    <Error Text="The WiX Toolset v3.11 build tools must be installed to build this project. To download the WiX Toolset, see https://wixtoolset.org/releases/v3.11/stable" />
  </Target>-->
  <Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixTargetsImported)' != 'true' ">
    <Message Text="Warning: WiX Toolset not detected via $(WixTargetsPath) or MSBuildExtensionsPath32. Ensure it is installed." Importance="high" />
  </Target>
  <Target Name="BeforeBuild">
    <!-- Create a Fresh Build by removing old one and build a new one -->
    <!-- Check if the configuration is Release -->
    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
      <!-- Define the path to the folder to be deleted -->
      <FolderToDelete>..\Volunteer Management UI\bin\$(Configuration)</FolderToDelete>
    </PropertyGroup>
    <!-- <Exec Command="rd /s /q ..\Volunteer Management UI\bin\" /> -->
    <Exec Command="if exist &quot;$(FolderToDelete)&quot; ( rmdir /s /q &quot;$(FolderToDelete)&quot; )" />
    <Exec Command="msbuild &quot;..\Volunteer Management UI\Volunteer Management UI.csproj&quot; /p:Configuration=Release /verbosity:detailed" />
    <!-- Get assembly version -->
    <GetAssemblyIdentity AssemblyFiles="..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows\Volunteer Management UI.dll">
      <Output TaskParameter="Assemblies" ItemName="AssemblyVersion" />
    </GetAssemblyIdentity>
    <PropertyGroup>
      <DefineConstants>
		  BuildVersion=%(AssemblyVersion.Version);
		  BasePath=..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows\;
		  Project.TargetDir=..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows
	  </DefineConstants>
      <RunWixToolsOutOfProc Condition=" '$(PROCESSOR_ARCHITECTURE)'!='x86' ">true</RunWixToolsOutOfProc>
    </PropertyGroup>
    <HeatDirectory OutputFile="ComponentsGenerated.wxs" DirectoryRefID="INSTALLFOLDER" ComponentGroupName="PublishedComponents" SuppressCom="true" Directory="$(BasePath)" SuppressFragments="true" SuppressRegistry="true" SuppressRootDirectory="true" AutoGenerateGuids="false" GenerateGuidsNow="true" ToolPath="$(WixToolPath)" PreprocessorVariable="var.BasePath" RunAsSeparateProcess="$(RunWixToolsOutOfProc)" />
    <!--RunAsSeparateProcess="$(RunWixToolsOutOfProc)" />-->
    <!--Directory="..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows" -->
  </Target>
  <!--<Target Name="AfterBuild">
    To Create a new Directory for saving each MSI build and save it in the Install folder 
    Get assembly version 
    <GetAssemblyIdentity AssemblyFiles="..\Volunteer Management UI\bin\Release\net8.0-windows\Volunteer Management UI.dll">
      <Output TaskParameter="Assemblies" ItemName="AssemblyVersion" />
    </GetAssemblyIdentity>
    Rename MSI build and move it to the Install Folder 
    <Exec Command="if not exist Installs mkdir Installs" />
    <Exec Command="move bin\$(Configuration)\$(OutputName).msi Installs\Volunteer Management UI-%(AssemblyVersion.Version)-$(Configuration).msi" />
  </Target>-->
  <Target Name="AfterBuild">
    <GetAssemblyIdentity AssemblyFiles="..\Volunteer Management UI\bin\$(Configuration)\net8.0-windows\Volunteer Management UI.dll">
      <Output TaskParameter="Assemblies" ItemName="AssemblyVersion" />
    </GetAssemblyIdentity>
    <PropertyGroup>
      <AssemblyVersionNumber>$([System.Version]::Parse('%(AssemblyVersion.Version)').ToString())</AssemblyVersionNumber>
    </PropertyGroup>
    <Message Text="Resolved Assembly Version: $(AssemblyVersionNumber)" Importance="high" />
    <Exec Command="if not exist &quot;Installs&quot; mkdir &quot;Installs&quot;" />
    <Exec Command="if exist &quot;bin\$(Configuration)\en-us\$(OutputName).msi&quot; (echo Found MSI) else (echo NOT FOUND: bin\$(Configuration)\en-us\$(OutputName).msi)" />
    <Exec Command="move &quot;bin\$(Configuration)\en-us\$(OutputName).msi&quot; &quot;Installs\Volunteer Management UI-%(AssemblyVersion.Version)-$(Configuration).msi&quot;" />
    <!--<Exec Command='move "bin\$(Configuration)\$(OutputName).msi" "Installs\Volunteer Management UI-%(AssemblyVersion.Version)-$(Configuration).msi"' /> -->
  </Target>
</Project>